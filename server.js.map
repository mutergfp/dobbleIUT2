{"version":3,"file":"server.js","sources":["webpack:///webpack/bootstrap 7c7ad7a26dbbe0032a54","webpack:///external \"mongoose\"","webpack:///external \"bcrypt\"","webpack:///external \"jsonwebtoken\"","webpack:///src/server/services/game/cardGeneration.js","webpack:///external \"express\"","webpack:///src/server/index.js","webpack:///src/server/services/game/match.js","webpack:///src/server/services/game/props.js","webpack:///src/server/utils/fetching.js","webpack:///external \"axios\"","webpack:///src/server/utils/error.js","webpack:///external \"dotenv\"","webpack:///src/server/services/user/userModel.js","webpack:///src/server/utils/pubsub.js","webpack:///src/server/app.js","webpack:///external \"body-parser\"","webpack:///src/server/routes/routes.js","webpack:///src/server/services/user/userController.js","webpack:///src/server/services/game/gameController.js","webpack:///external \"source-map-support\"","webpack:///external \"path\"","webpack:///src/server/services/game/socket.js","webpack:///external \"socket.io\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7c7ad7a26dbbe0032a54","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"bcrypt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcrypt\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 2\n// module chunks = 0","import { fetchingJSON } from '@server/utils/fetching';\n\nconst BASE_URL = 'http://dobbleCartes:82';\n\nexport const genMiddleCard = cards => fetchingJSON(`${BASE_URL}/carte`, cards, 'POST');\n\nexport const genStarterPack = nbPlayers => fetchingJSON(`${BASE_URL}/cartes/${nbPlayers}`);\n\n\n// WEBPACK FOOTER //\n// src/server/services/game/cardGeneration.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 4\n// module chunks = 0","const mongoose = require('mongoose');\nconst jsonwebtoken = require('jsonwebtoken');\nconst Match = require('./services/game/match');\n\n// import environmental variables from our variables.env file\nrequire('dotenv').config({ path: 'variables.env' });\n\n// Connect to our Database and handle an bad connections\nmongoose.Promise = global.Promise; // Tell Mongoose to use ES6 promises\nmongoose.connect(process.env.DATABASE);\nmongoose.connection.on('error', err => {\n  console.error(`!!!!!!!ERROR!!!!!!! -> ${err.message}`);\n});\n\n// Invoke Models\nrequire('./services/user/userModel');\n\n// Invoke PubSub to dispatch events around the app\nglobal.events = require('./utils/pubsub');\n\n// Create a Match globally\nglobal.match = Match();\n\nconst app = require('./app');\napp.set('port', process.env.SERVER_PORT || 7777);\nconst server = app.listen(app.get('port'), () => {\n  console.log(`Express running -> PORT ${app.get('port')}`);\n});\n\n\nvar socket = require('./services/game/socket')(server);\n\n\n\n// WEBPACK FOOTER //\n// src/server/index.js","import * as props from './props';\nimport * as cardGenAPI from './cardGeneration';\nimport bcrypt from 'bcrypt';\n\nfunction Match() {\n    var id = 0;\n    var players = [];\n    var middleCard = [];\n    var status = 0;\n    var endTime = 0;\n    var matchTime = 0;\n\n    function init(time = 60000, startDelay = 60000) {\n        if (canInit()) {\n            matchTime = time;\n            id = bcrypt.hashSync(Date.now().toString(), 10); \n            status++;\n            setTimeout(start, startDelay);\n        }\n    }\n\n    function start() {  \n        if (canStart()) {\n            resetPlayerScores();\n            giveCards()\n                .then(data => {\n                    status++;\n                    endTime = Date.now() + matchTime;\n                    main();                   \n                })\n                .catch(err => console.error(err));\n        }\n    }\n\n    function main() {\n        console.log(getMatchInfos());\n        setTimeout(finishMatch, matchTime);\n    }\n    \n    function playerTurn({username}, symbol) {\n        if (playerExist({username})) {\n            let player = findPlayer({username});\n            return player.card.includes(symbol) && middleCard.includes(symbol); \n        }\n        return false;\n    }\n    \n    function nextPick({username}) {\n        var player = findPlayer({username});\n        player.score++;\n        player.card = middleCard;\n        return giveMiddleCard();\n    }\n\n    function giveCards() {\n        return cardGenAPI.genStarterPack(players.length)\n            .then(response => response.data)\n            .then(data => {\n                players = players.map((player, i) => {\n                    player.card = data.playersCards[i]\n                    return player;\n                })\n\n                middleCard = data.middleCard;\n                return data;\n            });\n    }\n\n    function giveMiddleCard() {\n        return cardGenAPI.genMiddleCard(getAllPlayerCards())\n            .then(response => response.data)\n            .then(middleCardData => middleCard = middleCardData);\n    }\n\n    function resetPlayerScores() {\n        players = players.map(player => {\n            player.score = 0\n            return player;\n        });\n    } \n\n    function canStart() {\n        return players.length >= 2 && status === 1;\n    }\n    \n    function canInit() {\n        return players.length >= 2 && status === 0;\n    }\n\n    function playerExist({ username }) {\n        return players.findIndex(p => p.username === username) !== -1;\n    }\n\n    function findPlayer({ username }) {\n        return players.find(player => player.username === username);\n    }\n\n    function finishMatch() {\n        status++;\n        console.log(getMatchInfos());\n        // emit event for socket\n        resetMatch();\n    }\n\n    function resetMatch() {\n        id = 0;\n        players = [];\n        middleCard = [];\n        status = 0;\n        endTime = 0;\n        matchTime = 0;\n    }\n\n    function isStarted() {\n        return status === 2;\n    }\n\n    function isFinished() {\n        return Date.now() >= endTime;\n    }\n\n    function getAllPlayerCards() {\n        return players.map(player => player.card);\n    }\n\n    function addPlayer({ username }) {\n        var player = {\n            username,\n            score: 0,\n            card: []\n        };\n        if (players.length < 8 && !playerExist(player)) {\n            players.push(player);\n        }\n        return playerExist(player);\n    }\n\n    function removePlayer(username) {\n        players = players.filter(player => player.username !== username);\n    }\n\n    function getRanking() {\n        return players\n            .sort((pa, pb) => pb.score - pa.score)\n            .map((player, i, self) => {\n                return {\n                    username: player.username,\n                    rank: self.findIndex(p => p.score === player.score) + 1\n                };\n            });\n    }\n\n    function getStatus() {\n        return status;\n    }\n\n    function getStatusMessage() {\n        return props.status[status]\n    }\n\n    function getMatchInfos() {\n        return {\n            id,\n            middleCard,\n            players,\n            status,\n            statusMessage: getStatusMessage(),\n            endTime,\n            ranking: getRanking()\n        };\n    }\n\n    function getPlayerInfos({username}) {\n        return findPlayer({username});;\n    }\n\n    return {\n        getStatus, \n        init, \n        start,\n        addPlayer,\n        findPlayer,\n        getStatusMessage,\n        playerExist,\n        getMatchInfos,\n        playerTurn,\n        nextPick,\n        isStarted,\n        getPlayerInfos\n    };\n}\n\nmodule.exports = Match;\n\n\n// WEBPACK FOOTER //\n// src/server/services/game/match.js","export const status = ['INIT', 'PENDING', 'IN_PROGRESS', 'FINISHED'];\n\n\n// WEBPACK FOOTER //\n// src/server/services/game/props.js","import axios from 'axios';\n\nimport { isRequired } from './error';\n\nexport const fetchingJSON = (url = isRequired('url'), params = {}, method = 'GET') => axios[method.toLowerCase()](url, params);\n\n\n\n\n// WEBPACK FOOTER //\n// src/server/utils/fetching.js","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 9\n// module chunks = 0","export const isRequired = fieldName => {\n    throw new Error(`${fieldName} param is required`);\n}\n\n\n// WEBPACK FOOTER //\n// src/server/utils/error.js","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 11\n// module chunks = 0","const mongoose = require('mongoose');\nconst bcrypt = require('bcrypt');\n\nconst UserSchema = mongoose.Schema({\n    username: {\n        type: String,\n        trim: true,\n        unique: true,\n        required: true\n    },\n    hash_password: {\n        type: String\n    },\n    created: {\n        type: Date,\n        default: Date.now\n    }\n});\n\nUserSchema.methods.comparePassword = function(password) {\n    return bcrypt.compareSync(password, this.hash_password);\n}\n\nmongoose.model('User', UserSchema);\n\n\n// WEBPACK FOOTER //\n// src/server/services/user/userModel.js","const events = (function(){\n    var events = {};\n\n    function on(eventName, fn) {\n        events[eventName] = events[eventName] || [];\n        events[eventName].push(fn);\n    }\n\n    function off(eventName, fn) {\n        if (events[eventName])\n            events[eventName] = events[eventName].filter(impl => impl !== fn);\n    }\n\n    function emit(eventName, data) {\n        if (events[eventName])\n            events[eventName].forEach(impl => impl(data));\n    }\n\n    return { on, off, emit };\n})();\n\nmodule.exports = events;\n\n\n// WEBPACK FOOTER //\n// src/server/utils/pubsub.js","const express = require('express');\nconst bodyParser = require('body-parser'); \nconst routes = require('./routes/routes');\nconst sourceMapSupport = require('source-map-support');\nconst path = require('path');\n\n\nif (process.env.BUILD_DEV) {\n    sourceMapSupport.install();\n}\n\nconst app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n//Cross origin\napp.use(function (req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\",\"*\");\n    res.header(\"Access-Control-Allow-Headers\",\"Origin, X-Requested-With, Content-Type, Accept\");\n    next();\n});\n\n// cdn middleware\napp.use('/download/', express.static(path.join(process.cwd(), 'dist')));\napp.use('/download/assets', express.static(path.join(process.cwd(), 'assets')));\n\napp.use('/', routes);\n\nmodule.exports = app;\n\n\n// WEBPACK FOOTER //\n// src/server/app.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 15\n// module chunks = 0","const router = require('express').Router();\n\nconst userController = require('@server/services/user/userController');\nconst gameController = require('@server/services/game/gameController');\n\nrouter.use(userController.decodeJWT);\n\n// user service\nrouter.post('/account/register', userController.validateFields, userController.register);\nrouter.post('/account/login', userController.login);\nrouter.get('/account/isloggedin', userController.isLoggedIn);\nrouter.get('/account/users', userController.users);\n\n// game service\nrouter.get('/game/genmiddlecard', gameController.testGenMiddleCard);\nrouter.get('/game/genstarterpack', gameController.testGenStarterPack);\nrouter.get('/game/test', gameController.testRoute);\n\nrouter.post('/game/join', userController.loginRequired, gameController.join);\nrouter.post('/game/jouer', userController.loginRequired, gameController.jouer);\n\nrouter.get('/game/infospartie', gameController.infospartie);\nrouter.get('/game/joueur/:username', gameController.infosjoueur);\n\n\nmodule.exports = router;\n\n\n// WEBPACK FOOTER //\n// src/server/routes/routes.js","const mongoose = require('mongoose');\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcrypt');\nconst User = mongoose.model('User');\n\nexports.register = (req, res) => {\n    let newUser = new User(req.body);\n    newUser.hash_password = bcrypt.hashSync(req.body.password, 10);\n    newUser.save()\n        .then(user => {\n            user.hash_password = undefined;\n            res.json(user);\n        })\n        .catch(err => res.status(400).json({\n            message: err\n        }));\n}\n\nexports.validateFields = (req, res, next) => {\n    const { confirmPassword, password } = req.body;\n    if (confirmPassword && password && confirmPassword === password) {\n        return next();\n    }\n    res.status(400).json({\n        message: 'Invalid confirm password'\n    });\n}\n\nexports.login = (req, res) => {\n    User.findOne({\n      username: req.body.username\n    })\n    .then(user => {\n        if (!user || !user.comparePassword(req.body.password)) {\n            return res.status(401).json({ \n                message: 'Authentication failed. Invalid user or password.' \n            });\n        }\n        return res.json({ \n            token: jwt.sign({\n                username: user.username, \n                _id: user._id \n            }, 'secret_key') \n        });\n    })\n    .catch(console.error);\n};\n\n// not used\nexports.loginRequired = (req, res, next) => {\n    if (!req.user) {\n        return res.status(401).json({\n            message: 'You are not logged in !'\n        });\n    }\n    next();\n};\n\nexports.decodeJWT = (req, res, next) => {\n    if (req.headers && req.headers.authorization && req.headers.authorization.split(' ')[0] === 'JWT') {\n        jwt.verify(req.headers.authorization.split(' ')[1], 'secret_key', (err, decode) => {\n            if (err) req.user = undefined;\n            req.user = decode;\n            next();\n        });\n    } else {\n        req.user = undefined;\n        next();\n    } \n}\n\nexports.isLoggedIn = (req, res) => {\n    if (!req.user) {\n        return res.status(401).json({\n            isLoggedIn: false\n        });\n    }\n    res.json({\n        isLoggedIn: true\n    });\n}\n\nexports.users = (req, res) => {\n    User.find({}, {\n        username: true,\n        created: true\n    })\n    .then(users => res.json(users))\n    .catch(err => res.status(400).json({\n        message: err.message\n    }));\n}\n\n\n\n// WEBPACK FOOTER //\n// src/server/services/user/userController.js","import { genMiddleCard, genStarterPack } from './cardGeneration';\n\nexport const testGenMiddleCard = (req ,res) => {\n    genMiddleCard([[1,2,3,4,5,6,7,8], [1,2,3,4,5,6,7,9]])\n        .then(response => response.data)\n        .then(data => res.json(data))\n        .catch(err => res.status(400).json({\n            message: err.message\n        }));\n}\n\nexport const testGenStarterPack = (req ,res) => {\n    genStarterPack(2)\n        .then(response => response.data)\n        .then(data => res.json(data))\n        .catch(err => res.status(400).json({\n            message: err.message\n        }));\n}\n\nexport const testRoute = (req, res) => {\n    res.send('it works');\n}\n\nexport const join = (req, res) => {\n    var player = req.user;\n    if (match.isStarted())\n        return res.status(410).json({\n            message: 'La partie à déjà commencée',\n            hasJoined: false\n        });\n    if (match.playerExist(player))\n        return res.status(400).json({\n            message: 'Vous avez déjà rejoint la partie',\n            hasJoined: true,\n            player: match.findPlayer(player),\n            status: match.getStatus(),\n            statusMessage: match.getStatusMessage()\n        });\n    if (!match.addPlayer(player)) {\n        return res.status(410).json({\n            message: 'Vous ne pouvez pas rejoindre la partie, la partie est pleine',\n            hasJoined: false\n        });\n    }\n    match.init(120000, 10000);\n    res.json({  \n        message: 'Vous avez rejoint la partie',\n        hasJoined: true,\n        player: match.findPlayer(player),\n        status: match.getStatus(),\n        statusMessage: match.getStatusMessage()\n    });\n    \n}\n\nexport const jouer = (req, res) => {\n    var player = req.user\n    if (!match.isStarted()) \n        return res.status(410).json({\n            message: \"La partie n'a pas commencée\",\n            status: match.getStatus(),\n            statusMessage: match.getStatusMessage()\n        })\n    if (!req.body.symbol)\n        return res.status(400).json({\n            message: 'Vous devez fournir un symbole pour jouer'\n        });\n    if (!match.playerTurn(player, req.body.symbol))\n        return res.status(404).json({\n            message: 'Joueur non trouvé ou mauvais symbole'\n        });\n    match.nextPick(player)\n        .then(middleCard => {\n            res.json({\n                middleCard\n            });\n        })\n        .catch(err => res.status(400).json({\n            message: err.message\n        }));\n}\n\nexport const infospartie = (req, res) => {\n    res.json(match.getMatchInfos());\n}\n\nexport const infosjoueur = (req, res) => {\n    var player = {username: req.params.username};\n    if (!match.playerExist(player))\n        return res.status(404).json({\n            message: 'Joueur non trouvé'\n        });\n    res.json(match.getPlayerInfos(player));\n}\n\n\n// WEBPACK FOOTER //\n// src/server/services/game/gameController.js","module.exports = require(\"source-map-support\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"source-map-support\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 20\n// module chunks = 0","var io = require('socket.io');\n\nfunction socket(server) {\n    io = io(server);\n\n    io.on('connection', socket => {\n        console.log('New player connected');\n\n    });\n}\n\nmodule.exports = socket;\n\n\n// WEBPACK FOOTER //\n// src/server/services/game/socket.js","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 22\n// module chunks = 0"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7DA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;;;;ACNA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;AC9BA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;;;;;;;;;;;;AChMA;;;;;;;;;;;;;;ACAA;AACA;;;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;ACJA;;;;;;;;;;;;ACAA;AACA;AACA;;;;;;ACFA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAVA;AACA;AAeA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC7BA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AACA;AADA;AAAA;AAGA;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AAEA;AADA;AAGA;AAEA;AADA;AAGA;AAEA;AACA;AADA;AAGA;AACA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAGA;AACA;;;;;;AC9FA;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;ACXA;;;A","sourceRoot":""}